{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Install Dependencies",
            "type": "shell",
            "command": "pip",
            "args": ["install", "-r", "requirements.txt"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Run API (Development)",
            "type": "shell",
            "command": "python",
            "args": ["-m", "uvicorn", "main:app", "--reload", "--host", "0.0.0.0", "--port", "8000"],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "isBackground": true,
            "problemMatcher": []
        },
        {
            "label": "Run API (Production)",
            "type": "shell",
            "command": "python",
            "args": ["-m", "uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "isBackground": true,
            "problemMatcher": []
        },
        {
            "label": "Run Tests",
            "type": "shell",
            "command": "python",
            "args": ["-m", "pytest", "tests/", "-v"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Run Tests with Coverage",
            "type": "shell",
            "command": "python",
            "args": ["-m", "pytest", "tests/", "-v", "--cov=.", "--cov-report=html", "--cov-report=term"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Format Code",
            "type": "shell",
            "command": "python",
            "args": ["-m", "black", "--line-length=100", "."],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Clean Temp Files",
            "type": "shell",
            "command": "python",
            "args": ["-c", "import shutil, os; [shutil.rmtree(d) for d in ['temp', 'logs'] if os.path.exists(d)]; [os.makedirs(d, exist_ok=True) for d in ['temp', 'logs']]"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Build Docker Image",
            "type": "shell",
            "command": "docker",
            "args": ["build", "-t", "shorttune-api:latest", "."],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Start Docker Compose",
            "type": "shell",
            "command": "docker-compose",
            "args": ["up", "--build"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "isBackground": true,
            "problemMatcher": []
        }
    ]
}
